0:00:04.160,0:00:09.840
this code is an example of an

0:00:06.240,0:00:11.840
infinite loop when i run the code i can

0:00:09.840,0:00:14.000
see that this loop just keeps going

0:00:11.840,0:00:17.039
there's nothing in our code telling the

0:00:14.000,0:00:19.199
loop when to stop and if you encounter

0:00:17.039,0:00:21.590
an infinite loop like this you can exit

0:00:19.199,0:00:24.769
the program by hitting ctrl c

0:00:21.590,0:00:24.769
[Music]

0:00:24.880,0:00:27.920
so in this particular problem what we

0:00:27.119,0:00:31.119
want to do

0:00:27.920,0:00:32.880
is iterate through the loop one time

0:00:31.119,0:00:34.320
and i'll put the string just keep

0:00:32.880,0:00:38.239
printing then

0:00:34.320,0:00:39.840
exit the loop with a simple loop like

0:00:38.239,0:00:42.160
this where you don't have

0:00:39.840,0:00:44.160
any condition telling the loop when to

0:00:42.160,0:00:47.760
stop iterating

0:00:44.160,0:00:50.320
we can use the reserved word break

0:00:47.760,0:00:51.760
so if i place break on line three of our

0:00:50.320,0:00:54.399
code

0:00:51.760,0:00:55.440
our loop will begin to iterate output

0:00:54.399,0:00:58.480
the string

0:00:55.440,0:01:01.680
and when it executes line three

0:00:58.480,0:01:01.680
the loop will be exited

0:01:03.120,0:01:08.320
so when i run the code i can see that

0:01:04.879,0:01:08.320
that's exactly what happens

0:01:09.119,0:01:15.360
if i put the break on line two

0:01:12.400,0:01:16.960
prior to outputting the string you can

0:01:15.360,0:01:19.360
see that our code will have no

0:01:16.960,0:01:19.360
output

0:01:20.000,0:01:25.520
and that's because when a break is

0:01:22.080,0:01:28.720
executed the block is exited immediately

0:01:25.520,0:01:30.640
not after the current iteration

0:01:28.720,0:01:32.640
so in order for our code to work as

0:01:30.640,0:01:33.439
expected we need to make sure to place

0:01:32.640,0:01:41.600
that break

0:01:33.439,0:01:43.680
after our call to put us

0:01:41.600,0:01:43.680
you

